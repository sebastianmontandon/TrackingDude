"use strict";(()=>{var e={};e.id=933,e.ids=[933],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1054:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>b,patchFetch:()=>S,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>y,staticGenerationAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{GET:()=>d,POST:()=>l});var o=r(9303),a=r(8716),i=r(670),s=r(7070);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){if(t.length<e)throw TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}async function p(){let{prisma:e}=await r.e(538).then(r.bind(r,3538));return e}async function d(){try{let e=await p(),t=(await e.domain.findMany({orderBy:{createdAt:"desc"}})).map(e=>({...e,creationDate:e.creationDate.toISOString().split("T")[0],expirationDate:e.expirationDate.toISOString().split("T")[0]}));return s.NextResponse.json(t)}catch(e){return console.error("Error fetching domains:",e),s.NextResponse.json({error:"Error al obtener dominios"},{status:500})}}async function l(e){try{let t=await p(),{name:r,creationDate:n,website:o,paymentPeriod:a}=await e.json(),i=365;a.includes("2")?i=730:a.includes("3")&&(i=1095);let d=function(e,t){c(2,arguments);var r=function(e){c(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===u(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):(("string"==typeof e||"[object String]"===t)&&"undefined"!=typeof console&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(Error().stack)),new Date(NaN))}(e),n=function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}(t);return isNaN(n)?new Date(NaN):(n&&r.setDate(r.getDate()+n),r)}(new Date(n),i),l=await t.domain.create({data:{name:r,creationDate:new Date(n),website:o,paymentPeriod:a,expirationDate:d}}),m={...l,creationDate:l.creationDate.toISOString().split("T")[0],expirationDate:l.expirationDate.toISOString().split("T")[0]};return s.NextResponse.json(m,{status:201})}catch(e){return console.error("Error creating domain:",e),s.NextResponse.json({error:"Error al crear dominio"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/domains/route",pathname:"/api/domains",filename:"route",bundlePath:"app/api/domains/route"},resolvedPagePath:"C:\\Users\\Stepha Vargas\\Documents\\TrackingDude\\src\\app\\api\\domains\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:f,staticGenerationAsyncStorage:g,serverHooks:y}=m,b="/api/domains/route";function S(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[276,972],()=>r(1054));module.exports=n})();